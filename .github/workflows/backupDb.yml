name: Daily API Backup on DB

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # Todos los dÃ­as a la 1:00 AM (UTC)
    
jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Configurar TIMESTAMP en UTC-3
        run: echo "TIMESTAMP=$(date -u --date='3 hours ago' +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Verificar TIMESTAMP
        run: echo "El timestamp es ${TIMESTAMP}"

      - name: Instalar PostgreSQL Client 16
        run: |
          sudo apt-get update
          sudo apt-get install -y wget ca-certificates
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main 16" | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo apt-get update
          sudo apt-get install -y postgresql-client-16

      - name: Generar volcado de la base de datos
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGPORT: ${{ secrets.PGPORT }}
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          pg_dump -Fc -h "$PGHOST" -U "$PGUSER" -d "$PGDATABASE" -p "$PGPORT" > backup_${TIMESTAMP}.dump


      - name: Crear carpeta para el backup
        run: mkdir -p backup && mv backup_${TIMESTAMP}.dump backup/

      - name: Subir el backup como artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-backup-${{ env.TIMESTAMP }}
          path: backup/
